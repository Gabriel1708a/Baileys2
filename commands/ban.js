const { canExecuteCommand, sendPermissionError, sendSuccess, sendError, getQuotedMessage, isQuotedMessage } = require('../utils/messageUtils');

module.exports = {
    name: 'ban',
    description: 'Bane usu√°rio (responder mensagem)',
    usage: '!ban (responder uma mensagem)',
    category: 'Modera√ß√£o',
    adminOnly: true,
    
    async execute(sock, message, groupId, sender, args) {
        try {
            // Verificar se o usu√°rio √© admin
            if (!await canExecuteCommand(sock, groupId, sender)) {
                await sendPermissionError(sock, groupId);
                return;
            }
            
            // Verificar se √© uma resposta a uma mensagem
            if (!isQuotedMessage(message)) {
                await sendError(sock, groupId, 'Responda a uma mensagem do usu√°rio que deseja banir e digite !ban');
                return;
            }
            
            const quotedMessage = getQuotedMessage(message);
            
            if (!quotedMessage) {
                await sendError(sock, groupId, 'N√£o foi poss√≠vel identificar a mensagem citada. Tente novamente.');
                return;
            }
            
            const targetUser = quotedMessage.sender;
            
            if (!targetUser) {
                await sendError(sock, groupId, 'N√£o foi poss√≠vel identificar o usu√°rio. Tente novamente.');
                return;
            }
            
            // Verificar se n√£o est√° tentando banir a si mesmo
            if (targetUser === sender) {
                await sendError(sock, groupId, 'Voc√™ n√£o pode banir a si mesmo!');
                return;
            }
            
            // Verificar se o usu√°rio alvo n√£o √© admin
            if (await canExecuteCommand(sock, groupId, targetUser)) {
                await sendError(sock, groupId, 'N√£o √© poss√≠vel banir outro administrador!');
                return;
            }
            
            // Banir usu√°rio
            await sock.groupParticipantsUpdate(groupId, [targetUser], 'remove');
            
            // Obter n√∫mero do usu√°rio para exibir
            const userNumber = targetUser.split('@')[0];
            
            await sendSuccess(sock, groupId, `Usu√°rio banido com sucesso!\n\nüî® *Usu√°rio:* @${userNumber}\nüë§ *Banido por:* @${sender.split('@')[0]}\nüìÖ *Data:* ${new Date().toLocaleString('pt-BR')}`);
            
        } catch (error) {
            console.error('‚ùå Erro no comando ban:', error);
            
            if (error.message.includes('forbidden')) {
                await sendError(sock, groupId, 'Bot n√£o tem permiss√£o para banir usu√°rios! Verifique se o bot √© administrador.');
            } else {
                await sendError(sock, groupId, 'Erro ao banir usu√°rio. Tente novamente.');
            }
        }
    }
};